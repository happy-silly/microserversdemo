// <auto-generated />
using System;
using Business.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

namespace Business.Migrations
{
    [DbContext(typeof(BusinessDbContext))]
    [Migration("20210423095450_AlterDbTablePrefix")]
    partial class AlterDbTablePrefix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Business.Models.BtMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AverageDeliverySpeed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_BtMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.ClassTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ClassEndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ClassNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClassStartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("OrdClass")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TeamSet")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("TextileProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TextileProcessId");

                    b.ToTable("Process_ClassTable", "dbo");
                });

            modelBuilder.Entity("Business.Models.CsMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AverageSpindleSpeed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxSpindleSpeed")
                        .HasColumnType("int");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_CsMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.HmMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AverageWarehousePressure")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_HmMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.JsMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AverageCardingSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("AverageDeliverySpeed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_JsMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.LtGroupShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_LtGroupShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.LtMachineRttemp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BigYarnLibFault1")
                        .HasColumnType("int");

                    b.Property<int?>("BigYarnLibFault2")
                        .HasColumnType("int");

                    b.Property<int?>("CanCnt")
                        .HasColumnType("int");

                    b.Property<int?>("CanSucceedCount")
                        .HasColumnType("int");

                    b.Property<int?>("CommunicateErrorCnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("CurrentLength")
                        .HasColumnType("float");

                    b.Property<int?>("CurrentShift")
                        .HasColumnType("int");

                    b.Property<double?>("CurrentShiftLength")
                        .HasColumnType("float");

                    b.Property<int?>("DeviceState")
                        .HasColumnType("int");

                    b.Property<int?>("DirectPowerFault")
                        .HasColumnType("int");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EsperoFault")
                        .HasColumnType("int");

                    b.Property<int?>("FallingCylinderSuccessNum")
                        .HasColumnType("int");

                    b.Property<double?>("FallingCylinderSuccessRatio")
                        .HasColumnType("float");

                    b.Property<int?>("FirstRawHeadPassNum")
                        .HasColumnType("int");

                    b.Property<double?>("FirstRawHeadRatio")
                        .HasColumnType("float");

                    b.Property<int?>("FirstRawHeadSuccessNum")
                        .HasColumnType("int");

                    b.Property<int?>("FixLength")
                        .HasColumnType("int");

                    b.Property<int?>("FullCylinderNum")
                        .HasColumnType("int");

                    b.Property<string>("HmiHardware")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HmiSoftwareVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<double?>("MachineEfc")
                        .HasColumnType("float");

                    b.Property<int?>("MachineFault")
                        .HasColumnType("int");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MachineWeight")
                        .HasColumnType("float");

                    b.Property<double?>("OutputLengthStart")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("RemainLength")
                        .HasColumnType("float");

                    b.Property<int?>("RunTimes")
                        .HasColumnType("int");

                    b.Property<int?>("SecondRawHeadPassNum")
                        .HasColumnType("int");

                    b.Property<double?>("SecondRawHeadRatio")
                        .HasColumnType("float");

                    b.Property<int?>("SecondRawHeadSuccessNum")
                        .HasColumnType("int");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<int?>("SingleSpindleEnterNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StateCode")
                        .HasColumnType("int");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TotalFallingCylinderSuccessRatio")
                        .HasColumnType("float");

                    b.Property<int?>("TotalFullCylinder_num")
                        .HasColumnType("int");

                    b.Property<double?>("TotalLength")
                        .HasColumnType("float");

                    b.Property<double?>("TotalLengthCal")
                        .HasColumnType("float");

                    b.Property<int?>("Tsid")
                        .HasColumnType("int");

                    b.Property<int?>("TubeDrawingPassNum")
                        .HasColumnType("int");

                    b.Property<int?>("WorkState")
                        .HasColumnType("int");

                    b.Property<int?>("YarnLibPlateFault")
                        .HasColumnType("int");

                    b.Property<int?>("YarndepotEmptyTubeEcho")
                        .HasColumnType("int");

                    b.Property<double?>("YarndepotEmptyTubeRatio")
                        .HasColumnType("float");

                    b.Property<double?>("YarndepotResidualRatio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Production_LtMachineRttemp", "dbo");
                });

            modelBuilder.Entity("Business.Models.LtMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FallingCylinderSuccessNum")
                        .HasColumnType("int");

                    b.Property<double?>("FallingCylinderSuccessRatio")
                        .HasColumnType("float");

                    b.Property<int?>("FirstRawHeadPassNum")
                        .HasColumnType("int");

                    b.Property<double?>("FirstRawHeadRatio")
                        .HasColumnType("float");

                    b.Property<int?>("FirstRawHeadSuccessNum")
                        .HasColumnType("int");

                    b.Property<int?>("FullCylinderNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SecondRawHeadPassNum")
                        .HasColumnType("int");

                    b.Property<double?>("SecondRawHeadRatio")
                        .HasColumnType("float");

                    b.Property<int?>("SecondRawHeadSuccessNum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<int?>("SingleSpindleEnterNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<double?>("TotalFallingCylinderSuccessRatio")
                        .HasColumnType("float");

                    b.Property<int?>("TotalFullCylinder_num")
                        .HasColumnType("int");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<int?>("TubeDrawingPassNum")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.Property<int?>("YarndepotEmptyTubeEcho")
                        .HasColumnType("int");

                    b.Property<double?>("YarndepotEmptyTubeRatio")
                        .HasColumnType("float");

                    b.Property<int?>("YarndepotResidualNum")
                        .HasColumnType("int");

                    b.Property<double?>("YarndepotResidualRatio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_LtMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.LtPositionProductionReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AlarmCnt")
                        .HasColumnType("int");

                    b.Property<string>("AlarmTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlarmTimeAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BobbinChanges")
                        .HasColumnType("int");

                    b.Property<int?>("BobbinCuts")
                        .HasColumnType("int");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<int?>("ConeCnt")
                        .HasColumnType("int");

                    b.Property<int?>("ConeCuts")
                        .HasColumnType("int");

                    b.Property<int?>("ConeJointCnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DoffAvgTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoffCnt")
                        .HasColumnType("int");

                    b.Property<string>("DoffTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FaultCnt")
                        .HasColumnType("int");

                    b.Property<string>("FaultTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaultTimeAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JointCnt")
                        .HasColumnType("int");

                    b.Property<int?>("JointCntPer10Km")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MechanicalEfc")
                        .HasColumnType("float");

                    b.Property<int?>("Num")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ProductionEfc")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<int?>("SigleLength")
                        .HasColumnType("int");

                    b.Property<double?>("SigleWeight")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<int?>("SpliceCnt")
                        .HasColumnType("int");

                    b.Property<int?>("SpoolSucceedCnt")
                        .HasColumnType("int");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechnicalAlarmCnt")
                        .HasColumnType("int");

                    b.Property<string>("TechnicalAlarmTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalAlarmTimeAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("TiedCnt")
                        .HasColumnType("int");

                    b.Property<string>("TiedTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiedTimeAvg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<string>("WorkTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YarnFaultCuts")
                        .HasColumnType("int");

                    b.Property<int?>("YarnFaultCutsPer10Km")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.Property<double?>("YarnWeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_LtPositionProductionReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.MachineDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MachineNo")
                        .HasColumnType("int");

                    b.Property<int?>("MachineTypeId")
                        .HasColumnType("int");

                    b.Property<byte?>("ModbusAddr")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Segments")
                        .HasColumnType("int");

                    b.Property<string>("Serial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SpinningMillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subtype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalSpindles")
                        .HasColumnType("int");

                    b.Property<string>("UpcVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YarnBreakDetection")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MachineTypeId");

                    b.HasIndex("SpinningMillId");

                    b.ToTable("Assets_MachineDocument", "dbo");
                });

            modelBuilder.Entity("Business.Models.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("FontAwesomeIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JingweiLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MachineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineDescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachinePicPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineTypeAbbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("RatedSpeed")
                        .HasColumnType("real");

                    b.Property<Guid?>("TextileProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TextileProcessId");

                    b.ToTable("Assets_MachineType", "dbo");
                });

            modelBuilder.Entity("Business.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MainProducts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SEPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceEngineer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assets_Manufacturer", "dbo");
                });

            modelBuilder.Entity("Business.Models.SmMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AverageDeliverySpeed")
                        .HasColumnType("int");

                    b.Property<double?>("AverageProductionRate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_SmMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.SpinningMill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MillName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TextileGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TextileGroupId");

                    b.ToTable("Assets_SpinningMill", "dbo");
                });

            modelBuilder.Entity("Business.Models.TbjMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<int?>("AverageVehicleSpeed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_TbjMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.TextileGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assets_TextileGroup", "dbo");
                });

            modelBuilder.Entity("Business.Models.TextileProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assets_TextileProcess", "dbo");
                });

            modelBuilder.Entity("Business.Models.XsMachineShiftReport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ActualYarnWeight")
                        .HasColumnType("float");

                    b.Property<double?>("AverageActualTwist")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Begin")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ClassEndLength")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClassStartLength")
                        .HasColumnType("bigint");

                    b.Property<double?>("Coe")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double?>("EfcRun")
                        .HasColumnType("float");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MachineDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MachineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxSpindleSpeed")
                        .HasColumnType("int");

                    b.Property<double?>("Power")
                        .HasColumnType("float");

                    b.Property<double?>("PowerPerWeight")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionDispatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("RollerDiameter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftNum")
                        .HasColumnType("int");

                    b.Property<double>("SpeedAvg1")
                        .HasColumnType("float");

                    b.Property<double>("SpeedAvg2")
                        .HasColumnType("float");

                    b.Property<string>("TeamSet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TheoreticalYarnWeight")
                        .HasColumnType("float");

                    b.Property<long?>("TotalOutputCalEnd")
                        .HasColumnType("bigint");

                    b.Property<long?>("TotalOutputCalStart")
                        .HasColumnType("bigint");

                    b.Property<int>("Tsid")
                        .HasColumnType("int");

                    b.Property<double?>("YarnLength")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("MachineDocumentId");

                    b.ToTable("Production_XsMachineShiftReport", "dbo");
                });

            modelBuilder.Entity("Business.Models.BtMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.ClassTable", b =>
                {
                    b.HasOne("Business.Models.TextileProcess", "textileProcess")
                        .WithMany()
                        .HasForeignKey("TextileProcessId");

                    b.Navigation("textileProcess");
                });

            modelBuilder.Entity("Business.Models.CsMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.HmMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.JsMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.LtGroupShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.LtMachineRttemp", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.LtMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.LtPositionProductionReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.MachineDocument", b =>
                {
                    b.HasOne("Business.Models.MachineType", "MachineType")
                        .WithMany("MachineDocuments")
                        .HasForeignKey("MachineTypeId");

                    b.HasOne("Business.Models.SpinningMill", "SpinningMill")
                        .WithMany("MachineDocuments")
                        .HasForeignKey("SpinningMillId");

                    b.Navigation("MachineType");

                    b.Navigation("SpinningMill");
                });

            modelBuilder.Entity("Business.Models.MachineType", b =>
                {
                    b.HasOne("Business.Models.Manufacturer", "Manufacturer")
                        .WithMany("MachineTypes")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("Business.Models.TextileProcess", "TextileProcess")
                        .WithMany("MachineTypes")
                        .HasForeignKey("TextileProcessId");

                    b.Navigation("Manufacturer");

                    b.Navigation("TextileProcess");
                });

            modelBuilder.Entity("Business.Models.SmMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.SpinningMill", b =>
                {
                    b.HasOne("Business.Models.TextileGroup", "TextileGroup")
                        .WithMany("SpinningMills")
                        .HasForeignKey("TextileGroupId");

                    b.Navigation("TextileGroup");
                });

            modelBuilder.Entity("Business.Models.TbjMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.XsMachineShiftReport", b =>
                {
                    b.HasOne("Business.Models.MachineDocument", "MachineDocument")
                        .WithMany()
                        .HasForeignKey("MachineDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineDocument");
                });

            modelBuilder.Entity("Business.Models.MachineType", b =>
                {
                    b.Navigation("MachineDocuments");
                });

            modelBuilder.Entity("Business.Models.Manufacturer", b =>
                {
                    b.Navigation("MachineTypes");
                });

            modelBuilder.Entity("Business.Models.SpinningMill", b =>
                {
                    b.Navigation("MachineDocuments");
                });

            modelBuilder.Entity("Business.Models.TextileGroup", b =>
                {
                    b.Navigation("SpinningMills");
                });

            modelBuilder.Entity("Business.Models.TextileProcess", b =>
                {
                    b.Navigation("MachineTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
